[
  {
    "objectID": "rforbeginer.html",
    "href": "rforbeginer.html",
    "title": "Part 0: R for beginner",
    "section": "",
    "text": "To install Cran R, you must go to https://cran.r-project.org/, and download the install file for your favorite operating system, click on the .exe, .dmg, .pkg, .deb, respectively for Windows, MacOS and Linux-debian.\nAnd click on follow… until to reach successful installation Then download and install the IDE Rstudio https://www.rstudio.com/products/rstudio/.\nEverything is free to download\n\n\n\nWhere am I?\nTo get the current working directory\n\ngetwd()\n\n[1] \"/Users/marcgarel/OSU/MIO/2023/Projet_2023/Formation_ISBATT/FormationR\"\n\n\nTo change my working directory from the console\n\nsetwd(\"/path/to/my/fancy/project/\")\n\n\n\n\n\n\n\nNote\n\n\n\nIn Rstudio, we can change the working directory by navigating in folder in File panel and clicking on menu More\n\n\nIf you are using a Rproject, you don’t need to change your working directory.\nHow can I find documentation about function?\nThe command help() is the 911\n\n# exemple with function read.table\nhelp(\"read.table\")\n#other exemple of 911\nexample(\"plot\")\n??plot()"
  },
  {
    "objectID": "rforbeginer.html#how-to-install-r",
    "href": "rforbeginer.html#how-to-install-r",
    "title": "Part 0: R for beginner",
    "section": "",
    "text": "To install Cran R, you must go to https://cran.r-project.org/, and download the install file for your favorite operating system, click on the .exe, .dmg, .pkg, .deb, respectively for Windows, MacOS and Linux-debian.\nAnd click on follow… until to reach successful installation Then download and install the IDE Rstudio https://www.rstudio.com/products/rstudio/.\nEverything is free to download\n\n\n\nWhere am I?\nTo get the current working directory\n\ngetwd()\n\n[1] \"/Users/marcgarel/OSU/MIO/2023/Projet_2023/Formation_ISBATT/FormationR\"\n\n\nTo change my working directory from the console\n\nsetwd(\"/path/to/my/fancy/project/\")\n\n\n\n\n\n\n\nNote\n\n\n\nIn Rstudio, we can change the working directory by navigating in folder in File panel and clicking on menu More\n\n\nIf you are using a Rproject, you don’t need to change your working directory.\nHow can I find documentation about function?\nThe command help() is the 911\n\n# exemple with function read.table\nhelp(\"read.table\")\n#other exemple of 911\nexample(\"plot\")\n??plot()"
  },
  {
    "objectID": "rforbeginer.html#how-to-use-a-package",
    "href": "rforbeginer.html#how-to-use-a-package",
    "title": "Part 0: R for beginner",
    "section": "How to use a package?",
    "text": "How to use a package?\n\nInstallation\nYou can install new packages by clicking directly in Rstudio or by command line (the best way for me)\n\ninstall.packages(\"your_package\") # for packages on CRAN mirror\n\nFor packages from Bioconductor (specifically for bioinformatic):\n\nBiocManager::install(\"your_package\")\n\nor from github (using the package devtools)\n\ndevtools::install_github(\"your_package\")\n\n\n\nUsing functions from a package\nTo use functions from a specific package you can either load the entire package:\n\nlibrary(\"your package1\")\nlibrary(\"your package2\")\nlibrary(\"your package3\")\n\nor call the function this way:\n\nyour_package::yourfunction()\n\nOn your R session using cloud IFB all the necessary packages are installed"
  },
  {
    "objectID": "rforbeginer.html#expression-and-affectation",
    "href": "rforbeginer.html#expression-and-affectation",
    "title": "Part 0: R for beginner",
    "section": "Expression and affectation",
    "text": "Expression and affectation\n\nExpression\nAn expression is directly evaluated and the result is displayed on terminal Example :\n\n2 + 3\n\n[1] 5\n\nsqrt(25)\n\n[1] 5\n\n\n\n\nAffectation in an object\nAn assignment is an expression stored in object or variable. In this example expression, constant, array, matrix, data frame, list Example :\n\na=2+3\nb=\"madame\"\n\n What happens when you execute this cell?\n\na\n\n[1] 5\n\nb\n\n[1] \"madame\"\n\n\n\na=10\nb=\"5\"\nsomme&lt;-a+b\n\n Why do we have an error ? I need to know the type of the object\n\nstr(a)\nstr(b)\n\n What kind of information do we get?\nWe can also perform mathematical operations on numerical objects.\n\nlog(a) # to obtain the logarithm of a\n\n[1] 1.609438\n\nsqrt(a)# to obtain the square root of a\n\n[1] 2.236068\n\n\n\n# we can compare it\nlog(a)&gt;sqrt(a)\n\n[1] FALSE\n\n\n\n\nType of objects\n\nVectors\nVectors are objects composed by values with the same type or (i.e, numeric, characters…)\n\nV1 &lt;- c(2, 6, 9) # numeric vector\nV2 &lt;- c(\"monday\", \"Tuesday\", \"Wednesday\")# character vector\nV3 &lt;- rep(6, 3) # repetition of the same value\nV4 &lt;- seq(1, 3, 0.1)# sequence of number\nV5 &lt;- 1:100\nV5\n\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\n\nTo know the number of value inside a vector\n\nlength(V1)\n\n[1] 3\n\n\nWhat do you think about V4?\nFilter a vector according to criteria\n\n# Example : with list of value (a vector)\n\nx &lt;- c(1, 3, 5, 3, 2, 1, 4, 6, 4, 7, 5, 4, 3)\n\n# get element from 2 to 6\n\nx[2:6]\n\n[1] 3 5 3 2 1\n\n# get elements 3 et 5 from x.\n\nx[c(3, 5)]\n\n[1] 5 2\n\n# get value more than 20.\n\nx[x &gt; 5]\n\n[1] 6 7\n\n# get value of  x where x is equal to 21.\n\nx[x == 5]\n\n[1] 5 5\n\n# return elements form x the the value different from 5\n\nx[x != 5]\n\n [1] 1 3 3 2 1 4 6 4 7 4 3\n\n\nFilter a vector according to several criteria\n\n# 3 lists : ages, sexes et poids\n\nage &lt;- c(20, 30, 40,\n         15, 22, 24,\n         36, 38)\n\nsexe &lt;- c(\"F\", \"M\", \"F\",\n          \"M\", \"F\", \"M\",\n          \"F\", \"M\")\n\npoids &lt;- c(75, 76, 73,\n           72, 64, 76,\n           73, 72)\n\n# get value from age greater than 20 and less than 30.\n\nage[age &gt; 20 & age &lt; 30]\n\n[1] 22 24\n\n# Recovering \"poids\" for those who are older than 25 and female\n\npoids[age &gt; 25 & sexe == \"F\"]\n\n[1] 73 73\n\n#Retrieve age values below 20 or above 30.\n\nage[age &lt; 20 | age &gt; 30]\n\n[1] 40 15 36 38\n\n\nExo1\nConsidering the vector a such as a &lt;- c(\"lannister\", \"targaryen\", \"baratheon\", \"starck\", \"greyjoy\")\n\nWhat is the length of the vector?\nTry doing a[1:3]. What do you get?\nCreate a new vector b containing only lannister and starck.\nTry doing a[-1]. What do you get?\nSort by alphabetical order using sort()\n\nExo2\n\nCreate a vector a containing all integers from 1 to 100.\nAdd the values 200, 201, 202 to the vector a.\nCreate a vector b containing all even integers from 2 to 100 using seq()\n\n\n\nData frames\nData frames are objects composed by vector where the value are of different modes (i.e, numeric, characters…)\n\nData frame examples\nLoad a data frame\n\ndata(iris)\n\nVisualise the data frame in a table\n\nView(iris)\n\nDisplay its internal structure\n\nstr(iris)\n\n'data.frame':   150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n\nWhat can we notice?\n\n\nHow to build your own data frame\n\ndate &lt;- c(\"1_monday\", \"2_Tuesday\", \"3_Wednesday\",\n          \"4_Thursday\", \"5_Friday\", \"6_Sturday\",\n          \"7_Sunday\")\n\nis.character(date)\n\n[1] TRUE\n\n# temperature in deg Celsius\ntemperature &lt;- c(24, 27, 25,\n               22, 30, 21,\n               28)\n\nis.numeric(temperature)\n\n[1] TRUE\n\n# rain in mm\nrain &lt;- c(1, 0, 0,\n          5, 2, 0,\n          0)\n\nis.numeric(rain)\n\n[1] TRUE\n\n# make data.frame\ndf &lt;- data.frame(date, temperature, rain)\nstr(df)\n\n'data.frame':   7 obs. of  3 variables:\n $ date       : chr  \"1_monday\" \"2_Tuesday\" \"3_Wednesday\" \"4_Thursday\" ...\n $ temperature: num  24 27 25 22 30 21 28\n $ rain       : num  1 0 0 5 2 0 0\n\n#To select a column or vector\ndf$temperature\n\n[1] 24 27 25 22 30 21 28\n\ndf[, 2]\n\n[1] 24 27 25 22 30 21 28\n\n# here we use list() instead of c()\n# because there is multiple class in inside row\n\nday &lt;- list(\"8_monday\", 29, 1)\nnew_def &lt;- rbind(df, day)# add row to a data frame\nnew_def\n\n         date temperature rain\n1    1_monday          24    1\n2   2_Tuesday          27    0\n3 3_Wednesday          25    0\n4  4_Thursday          22    5\n5    5_Friday          30    2\n6   6_Sturday          21    0\n7    7_Sunday          28    0\n8    8_monday          29    1"
  },
  {
    "objectID": "rforbeginer.html#functions",
    "href": "rforbeginer.html#functions",
    "title": "Part 0: R for beginner",
    "section": "Functions",
    "text": "Functions\n\nDefinition\nFunction are a compilation of command line with different instructions inside one object to simplify code. A function is composed by arguments and options.\nfunction(argument1, argument2, option1, … ,option10)\n\n\nUsual functions for data frame\n\nhead() # to know first line of your data frame\nclass()# return the class of the object. Ex : data.frame, matrix, list ....\nstr()# return the structure of the object. Ex : numeric, factor, character....\nnames()# to get or set the names of an object\nsum() # for addition\nmin() # return the minimum of the vector\nmax() # return the minimum of the vector\nrow.names() # attribute names for lines of the data frame\ncolnames() # attribute names for column of the data frame\napply() # Returns a vector or array or list of values obtained by applying a function to margins of an array or matrix.\n\nExample function row.names, class and str\n\ndf2 &lt;- data.frame(x = c(TRUE, FALSE, NA, NA), y = c(12, 34, 56, 78))\ndf2\n\n      x  y\n1  TRUE 12\n2 FALSE 34\n3    NA 56\n4    NA 78\n\nrow.names(df2) &lt;- paste(\"row\", 1 : 4, sep = \"_\")\ndf2 # what do you see\n\n          x  y\nrow_1  TRUE 12\nrow_2 FALSE 34\nrow_3    NA 56\nrow_4    NA 78\n\nclass(df2)\n\n[1] \"data.frame\"\n\nstr(df2)\n\n'data.frame':   4 obs. of  2 variables:\n $ x: logi  TRUE FALSE NA NA\n $ y: num  12 34 56 78\n\n\nExample function apply\n\nhead(df)\n\n         date temperature rain\n1    1_monday          24    1\n2   2_Tuesday          27    0\n3 3_Wednesday          25    0\n4  4_Thursday          22    5\n5    5_Friday          30    2\n6   6_Sturday          21    0\n\nclass(df)\n\n[1] \"data.frame\"\n\nstr(df)\n\n'data.frame':   7 obs. of  3 variables:\n $ date       : chr  \"1_monday\" \"2_Tuesday\" \"3_Wednesday\" \"4_Thursday\" ...\n $ temperature: num  24 27 25 22 30 21 28\n $ rain       : num  1 0 0 5 2 0 0\n\n# return mean for the numerical column of the data.frame. apply(data,margin,fun). \n# For margin parameter the value 1 return mean for each row, \n# for margin=2 return mean for each selected column.\napply(df[, 2:3], 2, mean)\n\ntemperature        rain \n  25.285714    1.142857 \n\n\nExo 3\nFrom data set iris in package datasets** Load package datasets and load data set iris using data()\n\nGive the class Sepal.Width and Species vectors\nWhat is the minimum / maximum / average sepal length of these irises?\nWhat are the values of the first 10 irises?\nCalculate standard deviation for every numeric vector (function : sd())\nCalculate mean for every numeric vector\nCreate a data frame with mean and sd as line and give a name for each line\nAn error of 0.5cm was made in the measurement of the length of the sepal of the 41st iris: add 0.5cm to this measurement\n\n\n\nUse dplyr to select, filter a data frame\ndplyr is part of the library set named tidyverse (contraction of “tidy” and “universe”, it’s a tidy universe). tidyverse packages are designed to work together and thus follow the same code logic and a common grammar.\nThe pipe, %&gt;%, is one of the useful elements of the tidyverse. It allows to structure sequences of operations by minimizing the creation of intermediate objects and by facilitating the addition of a step anywhere in this sequence. Note that from R 4.1 you can use a new pipe, |&gt; without the need of loading any library.\nThe most commonly used tidyverse packages are loaded in your session:\n\nggplot2\ndplyr\ntidyr\nreadr\ntibble\nstringr\n\n\ntidyverse::tidyverse_packages()\n\n [1] \"broom\"         \"conflicted\"    \"cli\"           \"dbplyr\"       \n [5] \"dplyr\"         \"dtplyr\"        \"forcats\"       \"ggplot2\"      \n [9] \"googledrive\"   \"googlesheets4\" \"haven\"         \"hms\"          \n[13] \"httr\"          \"jsonlite\"      \"lubridate\"     \"magrittr\"     \n[17] \"modelr\"        \"pillar\"        \"purrr\"         \"ragg\"         \n[21] \"readr\"         \"readxl\"        \"reprex\"        \"rlang\"        \n[25] \"rstudioapi\"    \"rvest\"         \"stringr\"       \"tibble\"       \n[29] \"tidyr\"         \"xml2\"          \"tidyverse\"    \n\n\n\nFilter and select variable in data frame\n\nlibrary(tidyverse)\n\nWarning: le package 'tidyverse' a été compilé avec la version R 4.1.2\n\n\nWarning: le package 'ggplot2' a été compilé avec la version R 4.1.2\n\n\nWarning: le package 'tibble' a été compilé avec la version R 4.1.2\n\n\nWarning: le package 'tidyr' a été compilé avec la version R 4.1.2\n\n\nWarning: le package 'readr' a été compilé avec la version R 4.1.2\n\n\nWarning: le package 'purrr' a été compilé avec la version R 4.1.2\n\n\nWarning: le package 'dplyr' a été compilé avec la version R 4.1.2\n\n\nWarning: le package 'stringr' a été compilé avec la version R 4.1.2\n\n\nWarning: le package 'forcats' a été compilé avec la version R 4.1.2\n\n\nWarning: le package 'lubridate' a été compilé avec la version R 4.1.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndata(\"iris\")\n#To select a variable with tidyverse\ndplyr::select(iris, Species)\n\n       Species\n1       setosa\n2       setosa\n3       setosa\n4       setosa\n5       setosa\n6       setosa\n7       setosa\n8       setosa\n9       setosa\n10      setosa\n11      setosa\n12      setosa\n13      setosa\n14      setosa\n15      setosa\n16      setosa\n17      setosa\n18      setosa\n19      setosa\n20      setosa\n21      setosa\n22      setosa\n23      setosa\n24      setosa\n25      setosa\n26      setosa\n27      setosa\n28      setosa\n29      setosa\n30      setosa\n31      setosa\n32      setosa\n33      setosa\n34      setosa\n35      setosa\n36      setosa\n37      setosa\n38      setosa\n39      setosa\n40      setosa\n41      setosa\n42      setosa\n43      setosa\n44      setosa\n45      setosa\n46      setosa\n47      setosa\n48      setosa\n49      setosa\n50      setosa\n51  versicolor\n52  versicolor\n53  versicolor\n54  versicolor\n55  versicolor\n56  versicolor\n57  versicolor\n58  versicolor\n59  versicolor\n60  versicolor\n61  versicolor\n62  versicolor\n63  versicolor\n64  versicolor\n65  versicolor\n66  versicolor\n67  versicolor\n68  versicolor\n69  versicolor\n70  versicolor\n71  versicolor\n72  versicolor\n73  versicolor\n74  versicolor\n75  versicolor\n76  versicolor\n77  versicolor\n78  versicolor\n79  versicolor\n80  versicolor\n81  versicolor\n82  versicolor\n83  versicolor\n84  versicolor\n85  versicolor\n86  versicolor\n87  versicolor\n88  versicolor\n89  versicolor\n90  versicolor\n91  versicolor\n92  versicolor\n93  versicolor\n94  versicolor\n95  versicolor\n96  versicolor\n97  versicolor\n98  versicolor\n99  versicolor\n100 versicolor\n101  virginica\n102  virginica\n103  virginica\n104  virginica\n105  virginica\n106  virginica\n107  virginica\n108  virginica\n109  virginica\n110  virginica\n111  virginica\n112  virginica\n113  virginica\n114  virginica\n115  virginica\n116  virginica\n117  virginica\n118  virginica\n119  virginica\n120  virginica\n121  virginica\n122  virginica\n123  virginica\n124  virginica\n125  virginica\n126  virginica\n127  virginica\n128  virginica\n129  virginica\n130  virginica\n131  virginica\n132  virginica\n133  virginica\n134  virginica\n135  virginica\n136  virginica\n137  virginica\n138  virginica\n139  virginica\n140  virginica\n141  virginica\n142  virginica\n143  virginica\n144  virginica\n145  virginica\n146  virginica\n147  virginica\n148  virginica\n149  virginica\n150  virginica\n\n\n\n#To select several variables with tidyverse\ndplyr::select(iris,Species, Sepal.Length, Sepal.Width)\n\n       Species Sepal.Length Sepal.Width\n1       setosa          5.1         3.5\n2       setosa          4.9         3.0\n3       setosa          4.7         3.2\n4       setosa          4.6         3.1\n5       setosa          5.0         3.6\n6       setosa          5.4         3.9\n7       setosa          4.6         3.4\n8       setosa          5.0         3.4\n9       setosa          4.4         2.9\n10      setosa          4.9         3.1\n11      setosa          5.4         3.7\n12      setosa          4.8         3.4\n13      setosa          4.8         3.0\n14      setosa          4.3         3.0\n15      setosa          5.8         4.0\n16      setosa          5.7         4.4\n17      setosa          5.4         3.9\n18      setosa          5.1         3.5\n19      setosa          5.7         3.8\n20      setosa          5.1         3.8\n21      setosa          5.4         3.4\n22      setosa          5.1         3.7\n23      setosa          4.6         3.6\n24      setosa          5.1         3.3\n25      setosa          4.8         3.4\n26      setosa          5.0         3.0\n27      setosa          5.0         3.4\n28      setosa          5.2         3.5\n29      setosa          5.2         3.4\n30      setosa          4.7         3.2\n31      setosa          4.8         3.1\n32      setosa          5.4         3.4\n33      setosa          5.2         4.1\n34      setosa          5.5         4.2\n35      setosa          4.9         3.1\n36      setosa          5.0         3.2\n37      setosa          5.5         3.5\n38      setosa          4.9         3.6\n39      setosa          4.4         3.0\n40      setosa          5.1         3.4\n41      setosa          5.0         3.5\n42      setosa          4.5         2.3\n43      setosa          4.4         3.2\n44      setosa          5.0         3.5\n45      setosa          5.1         3.8\n46      setosa          4.8         3.0\n47      setosa          5.1         3.8\n48      setosa          4.6         3.2\n49      setosa          5.3         3.7\n50      setosa          5.0         3.3\n51  versicolor          7.0         3.2\n52  versicolor          6.4         3.2\n53  versicolor          6.9         3.1\n54  versicolor          5.5         2.3\n55  versicolor          6.5         2.8\n56  versicolor          5.7         2.8\n57  versicolor          6.3         3.3\n58  versicolor          4.9         2.4\n59  versicolor          6.6         2.9\n60  versicolor          5.2         2.7\n61  versicolor          5.0         2.0\n62  versicolor          5.9         3.0\n63  versicolor          6.0         2.2\n64  versicolor          6.1         2.9\n65  versicolor          5.6         2.9\n66  versicolor          6.7         3.1\n67  versicolor          5.6         3.0\n68  versicolor          5.8         2.7\n69  versicolor          6.2         2.2\n70  versicolor          5.6         2.5\n71  versicolor          5.9         3.2\n72  versicolor          6.1         2.8\n73  versicolor          6.3         2.5\n74  versicolor          6.1         2.8\n75  versicolor          6.4         2.9\n76  versicolor          6.6         3.0\n77  versicolor          6.8         2.8\n78  versicolor          6.7         3.0\n79  versicolor          6.0         2.9\n80  versicolor          5.7         2.6\n81  versicolor          5.5         2.4\n82  versicolor          5.5         2.4\n83  versicolor          5.8         2.7\n84  versicolor          6.0         2.7\n85  versicolor          5.4         3.0\n86  versicolor          6.0         3.4\n87  versicolor          6.7         3.1\n88  versicolor          6.3         2.3\n89  versicolor          5.6         3.0\n90  versicolor          5.5         2.5\n91  versicolor          5.5         2.6\n92  versicolor          6.1         3.0\n93  versicolor          5.8         2.6\n94  versicolor          5.0         2.3\n95  versicolor          5.6         2.7\n96  versicolor          5.7         3.0\n97  versicolor          5.7         2.9\n98  versicolor          6.2         2.9\n99  versicolor          5.1         2.5\n100 versicolor          5.7         2.8\n101  virginica          6.3         3.3\n102  virginica          5.8         2.7\n103  virginica          7.1         3.0\n104  virginica          6.3         2.9\n105  virginica          6.5         3.0\n106  virginica          7.6         3.0\n107  virginica          4.9         2.5\n108  virginica          7.3         2.9\n109  virginica          6.7         2.5\n110  virginica          7.2         3.6\n111  virginica          6.5         3.2\n112  virginica          6.4         2.7\n113  virginica          6.8         3.0\n114  virginica          5.7         2.5\n115  virginica          5.8         2.8\n116  virginica          6.4         3.2\n117  virginica          6.5         3.0\n118  virginica          7.7         3.8\n119  virginica          7.7         2.6\n120  virginica          6.0         2.2\n121  virginica          6.9         3.2\n122  virginica          5.6         2.8\n123  virginica          7.7         2.8\n124  virginica          6.3         2.7\n125  virginica          6.7         3.3\n126  virginica          7.2         3.2\n127  virginica          6.2         2.8\n128  virginica          6.1         3.0\n129  virginica          6.4         2.8\n130  virginica          7.2         3.0\n131  virginica          7.4         2.8\n132  virginica          7.9         3.8\n133  virginica          6.4         2.8\n134  virginica          6.3         2.8\n135  virginica          6.1         2.6\n136  virginica          7.7         3.0\n137  virginica          6.3         3.4\n138  virginica          6.4         3.1\n139  virginica          6.0         3.0\n140  virginica          6.9         3.1\n141  virginica          6.7         3.1\n142  virginica          6.9         3.1\n143  virginica          5.8         2.7\n144  virginica          6.8         3.2\n145  virginica          6.7         3.3\n146  virginica          6.7         3.0\n147  virginica          6.3         2.5\n148  virginica          6.5         3.0\n149  virginica          6.2         3.4\n150  virginica          5.9         3.0\n\n# To select several lines inside data frame \ndplyr::slice(iris,22:30)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.7          1.5         0.4  setosa\n2          4.6         3.6          1.0         0.2  setosa\n3          5.1         3.3          1.7         0.5  setosa\n4          4.8         3.4          1.9         0.2  setosa\n5          5.0         3.0          1.6         0.2  setosa\n6          5.0         3.4          1.6         0.4  setosa\n7          5.2         3.5          1.5         0.2  setosa\n8          5.2         3.4          1.4         0.2  setosa\n9          4.7         3.2          1.6         0.2  setosa\n\n# I can affect it to an object \n\nsubdata=dplyr::slice(iris,22:30)\n\n#or choosing different lines\nmyline=c(22, 38, 120) # I build a vector containing the line that I want\ndplyr::slice(iris,myline)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n1          5.1         3.7          1.5         0.4    setosa\n2          4.9         3.6          1.4         0.1    setosa\n3          6.0         2.2          5.0         1.5 virginica\n\n\n\n\nBonus : to pipe many function serval function together\nThe pipe  &gt;| , or %&gt;%, is one of the useful elements of the tidyverse. It allows to structure sequences of operations by minimizing the creation of intermediate objects and by facilitating the addition of a step anywhere in this sequence.\nThe useful command to manage data frame : 1) select() to select vector or variable from a data frame ; 2) filter() is used to subset a data frame, retaining all rows that satisfy your conditions ; mutate() adds new variables and preserves existing ones.\n\nlibrary(dplyr)\niris %&gt;%\nfilter(Sepal.Length &gt; 6) %&gt;% # filtered using size of Sepal Length\nfilter(Species == \"versicolor\") # and the species \n\n   Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1           7.0         3.2          4.7         1.4 versicolor\n2           6.4         3.2          4.5         1.5 versicolor\n3           6.9         3.1          4.9         1.5 versicolor\n4           6.5         2.8          4.6         1.5 versicolor\n5           6.3         3.3          4.7         1.6 versicolor\n6           6.6         2.9          4.6         1.3 versicolor\n7           6.1         2.9          4.7         1.4 versicolor\n8           6.7         3.1          4.4         1.4 versicolor\n9           6.2         2.2          4.5         1.5 versicolor\n10          6.1         2.8          4.0         1.3 versicolor\n11          6.3         2.5          4.9         1.5 versicolor\n12          6.1         2.8          4.7         1.2 versicolor\n13          6.4         2.9          4.3         1.3 versicolor\n14          6.6         3.0          4.4         1.4 versicolor\n15          6.8         2.8          4.8         1.4 versicolor\n16          6.7         3.0          5.0         1.7 versicolor\n17          6.7         3.1          4.7         1.5 versicolor\n18          6.3         2.3          4.4         1.3 versicolor\n19          6.1         3.0          4.6         1.4 versicolor\n20          6.2         2.9          4.3         1.3 versicolor\n\n\n\niris %&gt;%\n select(Sepal.Length, Species) %&gt;%\n mutate(Sepal.Length2 = Sepal.Length * 2)%&gt;%\n mutate(Sepal.Length2_squared = Sepal.Length2 * Sepal.Length2)\n\n    Sepal.Length    Species Sepal.Length2 Sepal.Length2_squared\n1            5.1     setosa          10.2                104.04\n2            4.9     setosa           9.8                 96.04\n3            4.7     setosa           9.4                 88.36\n4            4.6     setosa           9.2                 84.64\n5            5.0     setosa          10.0                100.00\n6            5.4     setosa          10.8                116.64\n7            4.6     setosa           9.2                 84.64\n8            5.0     setosa          10.0                100.00\n9            4.4     setosa           8.8                 77.44\n10           4.9     setosa           9.8                 96.04\n11           5.4     setosa          10.8                116.64\n12           4.8     setosa           9.6                 92.16\n13           4.8     setosa           9.6                 92.16\n14           4.3     setosa           8.6                 73.96\n15           5.8     setosa          11.6                134.56\n16           5.7     setosa          11.4                129.96\n17           5.4     setosa          10.8                116.64\n18           5.1     setosa          10.2                104.04\n19           5.7     setosa          11.4                129.96\n20           5.1     setosa          10.2                104.04\n21           5.4     setosa          10.8                116.64\n22           5.1     setosa          10.2                104.04\n23           4.6     setosa           9.2                 84.64\n24           5.1     setosa          10.2                104.04\n25           4.8     setosa           9.6                 92.16\n26           5.0     setosa          10.0                100.00\n27           5.0     setosa          10.0                100.00\n28           5.2     setosa          10.4                108.16\n29           5.2     setosa          10.4                108.16\n30           4.7     setosa           9.4                 88.36\n31           4.8     setosa           9.6                 92.16\n32           5.4     setosa          10.8                116.64\n33           5.2     setosa          10.4                108.16\n34           5.5     setosa          11.0                121.00\n35           4.9     setosa           9.8                 96.04\n36           5.0     setosa          10.0                100.00\n37           5.5     setosa          11.0                121.00\n38           4.9     setosa           9.8                 96.04\n39           4.4     setosa           8.8                 77.44\n40           5.1     setosa          10.2                104.04\n41           5.0     setosa          10.0                100.00\n42           4.5     setosa           9.0                 81.00\n43           4.4     setosa           8.8                 77.44\n44           5.0     setosa          10.0                100.00\n45           5.1     setosa          10.2                104.04\n46           4.8     setosa           9.6                 92.16\n47           5.1     setosa          10.2                104.04\n48           4.6     setosa           9.2                 84.64\n49           5.3     setosa          10.6                112.36\n50           5.0     setosa          10.0                100.00\n51           7.0 versicolor          14.0                196.00\n52           6.4 versicolor          12.8                163.84\n53           6.9 versicolor          13.8                190.44\n54           5.5 versicolor          11.0                121.00\n55           6.5 versicolor          13.0                169.00\n56           5.7 versicolor          11.4                129.96\n57           6.3 versicolor          12.6                158.76\n58           4.9 versicolor           9.8                 96.04\n59           6.6 versicolor          13.2                174.24\n60           5.2 versicolor          10.4                108.16\n61           5.0 versicolor          10.0                100.00\n62           5.9 versicolor          11.8                139.24\n63           6.0 versicolor          12.0                144.00\n64           6.1 versicolor          12.2                148.84\n65           5.6 versicolor          11.2                125.44\n66           6.7 versicolor          13.4                179.56\n67           5.6 versicolor          11.2                125.44\n68           5.8 versicolor          11.6                134.56\n69           6.2 versicolor          12.4                153.76\n70           5.6 versicolor          11.2                125.44\n71           5.9 versicolor          11.8                139.24\n72           6.1 versicolor          12.2                148.84\n73           6.3 versicolor          12.6                158.76\n74           6.1 versicolor          12.2                148.84\n75           6.4 versicolor          12.8                163.84\n76           6.6 versicolor          13.2                174.24\n77           6.8 versicolor          13.6                184.96\n78           6.7 versicolor          13.4                179.56\n79           6.0 versicolor          12.0                144.00\n80           5.7 versicolor          11.4                129.96\n81           5.5 versicolor          11.0                121.00\n82           5.5 versicolor          11.0                121.00\n83           5.8 versicolor          11.6                134.56\n84           6.0 versicolor          12.0                144.00\n85           5.4 versicolor          10.8                116.64\n86           6.0 versicolor          12.0                144.00\n87           6.7 versicolor          13.4                179.56\n88           6.3 versicolor          12.6                158.76\n89           5.6 versicolor          11.2                125.44\n90           5.5 versicolor          11.0                121.00\n91           5.5 versicolor          11.0                121.00\n92           6.1 versicolor          12.2                148.84\n93           5.8 versicolor          11.6                134.56\n94           5.0 versicolor          10.0                100.00\n95           5.6 versicolor          11.2                125.44\n96           5.7 versicolor          11.4                129.96\n97           5.7 versicolor          11.4                129.96\n98           6.2 versicolor          12.4                153.76\n99           5.1 versicolor          10.2                104.04\n100          5.7 versicolor          11.4                129.96\n101          6.3  virginica          12.6                158.76\n102          5.8  virginica          11.6                134.56\n103          7.1  virginica          14.2                201.64\n104          6.3  virginica          12.6                158.76\n105          6.5  virginica          13.0                169.00\n106          7.6  virginica          15.2                231.04\n107          4.9  virginica           9.8                 96.04\n108          7.3  virginica          14.6                213.16\n109          6.7  virginica          13.4                179.56\n110          7.2  virginica          14.4                207.36\n111          6.5  virginica          13.0                169.00\n112          6.4  virginica          12.8                163.84\n113          6.8  virginica          13.6                184.96\n114          5.7  virginica          11.4                129.96\n115          5.8  virginica          11.6                134.56\n116          6.4  virginica          12.8                163.84\n117          6.5  virginica          13.0                169.00\n118          7.7  virginica          15.4                237.16\n119          7.7  virginica          15.4                237.16\n120          6.0  virginica          12.0                144.00\n121          6.9  virginica          13.8                190.44\n122          5.6  virginica          11.2                125.44\n123          7.7  virginica          15.4                237.16\n124          6.3  virginica          12.6                158.76\n125          6.7  virginica          13.4                179.56\n126          7.2  virginica          14.4                207.36\n127          6.2  virginica          12.4                153.76\n128          6.1  virginica          12.2                148.84\n129          6.4  virginica          12.8                163.84\n130          7.2  virginica          14.4                207.36\n131          7.4  virginica          14.8                219.04\n132          7.9  virginica          15.8                249.64\n133          6.4  virginica          12.8                163.84\n134          6.3  virginica          12.6                158.76\n135          6.1  virginica          12.2                148.84\n136          7.7  virginica          15.4                237.16\n137          6.3  virginica          12.6                158.76\n138          6.4  virginica          12.8                163.84\n139          6.0  virginica          12.0                144.00\n140          6.9  virginica          13.8                190.44\n141          6.7  virginica          13.4                179.56\n142          6.9  virginica          13.8                190.44\n143          5.8  virginica          11.6                134.56\n144          6.8  virginica          13.6                184.96\n145          6.7  virginica          13.4                179.56\n146          6.7  virginica          13.4                179.56\n147          6.3  virginica          12.6                158.76\n148          6.5  virginica          13.0                169.00\n149          6.2  virginica          12.4                153.76\n150          5.9  virginica          11.8                139.24\n\niris %&gt;%\n  select(Sepal.Length, Species) %&gt;%\n  mutate(Sepal.Length = Sepal.Length / mean(Sepal.Length, na.rm = TRUE))\n\n    Sepal.Length    Species\n1      0.8727895     setosa\n2      0.8385625     setosa\n3      0.8043354     setosa\n4      0.7872219     setosa\n5      0.8556760     setosa\n6      0.9241301     setosa\n7      0.7872219     setosa\n8      0.8556760     setosa\n9      0.7529949     setosa\n10     0.8385625     setosa\n11     0.9241301     setosa\n12     0.8214489     setosa\n13     0.8214489     setosa\n14     0.7358813     setosa\n15     0.9925841     setosa\n16     0.9754706     setosa\n17     0.9241301     setosa\n18     0.8727895     setosa\n19     0.9754706     setosa\n20     0.8727895     setosa\n21     0.9241301     setosa\n22     0.8727895     setosa\n23     0.7872219     setosa\n24     0.8727895     setosa\n25     0.8214489     setosa\n26     0.8556760     setosa\n27     0.8556760     setosa\n28     0.8899030     setosa\n29     0.8899030     setosa\n30     0.8043354     setosa\n31     0.8214489     setosa\n32     0.9241301     setosa\n33     0.8899030     setosa\n34     0.9412436     setosa\n35     0.8385625     setosa\n36     0.8556760     setosa\n37     0.9412436     setosa\n38     0.8385625     setosa\n39     0.7529949     setosa\n40     0.8727895     setosa\n41     0.8556760     setosa\n42     0.7701084     setosa\n43     0.7529949     setosa\n44     0.8556760     setosa\n45     0.8727895     setosa\n46     0.8214489     setosa\n47     0.8727895     setosa\n48     0.7872219     setosa\n49     0.9070165     setosa\n50     0.8556760     setosa\n51     1.1979464 versicolor\n52     1.0952653 versicolor\n53     1.1808329 versicolor\n54     0.9412436 versicolor\n55     1.1123788 versicolor\n56     0.9754706 versicolor\n57     1.0781517 versicolor\n58     0.8385625 versicolor\n59     1.1294923 versicolor\n60     0.8899030 versicolor\n61     0.8556760 versicolor\n62     1.0096977 versicolor\n63     1.0268112 versicolor\n64     1.0439247 versicolor\n65     0.9583571 versicolor\n66     1.1466058 versicolor\n67     0.9583571 versicolor\n68     0.9925841 versicolor\n69     1.0610382 versicolor\n70     0.9583571 versicolor\n71     1.0096977 versicolor\n72     1.0439247 versicolor\n73     1.0781517 versicolor\n74     1.0439247 versicolor\n75     1.0952653 versicolor\n76     1.1294923 versicolor\n77     1.1637193 versicolor\n78     1.1466058 versicolor\n79     1.0268112 versicolor\n80     0.9754706 versicolor\n81     0.9412436 versicolor\n82     0.9412436 versicolor\n83     0.9925841 versicolor\n84     1.0268112 versicolor\n85     0.9241301 versicolor\n86     1.0268112 versicolor\n87     1.1466058 versicolor\n88     1.0781517 versicolor\n89     0.9583571 versicolor\n90     0.9412436 versicolor\n91     0.9412436 versicolor\n92     1.0439247 versicolor\n93     0.9925841 versicolor\n94     0.8556760 versicolor\n95     0.9583571 versicolor\n96     0.9754706 versicolor\n97     0.9754706 versicolor\n98     1.0610382 versicolor\n99     0.8727895 versicolor\n100    0.9754706 versicolor\n101    1.0781517  virginica\n102    0.9925841  virginica\n103    1.2150599  virginica\n104    1.0781517  virginica\n105    1.1123788  virginica\n106    1.3006275  virginica\n107    0.8385625  virginica\n108    1.2492869  virginica\n109    1.1466058  virginica\n110    1.2321734  virginica\n111    1.1123788  virginica\n112    1.0952653  virginica\n113    1.1637193  virginica\n114    0.9754706  virginica\n115    0.9925841  virginica\n116    1.0952653  virginica\n117    1.1123788  virginica\n118    1.3177410  virginica\n119    1.3177410  virginica\n120    1.0268112  virginica\n121    1.1808329  virginica\n122    0.9583571  virginica\n123    1.3177410  virginica\n124    1.0781517  virginica\n125    1.1466058  virginica\n126    1.2321734  virginica\n127    1.0610382  virginica\n128    1.0439247  virginica\n129    1.0952653  virginica\n130    1.2321734  virginica\n131    1.2664005  virginica\n132    1.3519681  virginica\n133    1.0952653  virginica\n134    1.0781517  virginica\n135    1.0439247  virginica\n136    1.3177410  virginica\n137    1.0781517  virginica\n138    1.0952653  virginica\n139    1.0268112  virginica\n140    1.1808329  virginica\n141    1.1466058  virginica\n142    1.1808329  virginica\n143    0.9925841  virginica\n144    1.1637193  virginica\n145    1.1466058  virginica\n146    1.1466058  virginica\n147    1.0781517  virginica\n148    1.1123788  virginica\n149    1.0610382  virginica\n150    1.0096977  virginica\n\n#Sepal.Length_norm is calculated using the mean of the Sepal.Length for all data set.\n\niris %&gt;%\n  select(Sepal.Length, Species) %&gt;%\n  group_by(Species) %&gt;%\n  mutate(Sepal.Length_norm = Sepal.Length / mean(Sepal.Length, na.rm = TRUE))\n\n# A tibble: 150 × 3\n# Groups:   Species [3]\n   Sepal.Length Species Sepal.Length_norm\n          &lt;dbl&gt; &lt;fct&gt;               &lt;dbl&gt;\n 1          5.1 setosa              1.02 \n 2          4.9 setosa              0.979\n 3          4.7 setosa              0.939\n 4          4.6 setosa              0.919\n 5          5   setosa              0.999\n 6          5.4 setosa              1.08 \n 7          4.6 setosa              0.919\n 8          5   setosa              0.999\n 9          4.4 setosa              0.879\n10          4.9 setosa              0.979\n# … with 140 more rows\n\n# In this last example Sepal.Length_norm is calculated using the mean of the Sepal.Length for each species using group_by()\n\n These commands are non-persistent, no changes are made on the original iris data frame. If you want to store it, you must assign your changes to a object\n\niris_modif&lt;-iris %&gt;%\n  select(Sepal.Length, Species) %&gt;%\n  group_by(Species) %&gt;%\n  mutate(Sepal.Length_norm = Sepal.Length / mean(Sepal.Length, na.rm = TRUE))\n\n\n\nHow to import external data frame issue from .txt or .csv\nTo import data set, the function read.table() or read.csv() are commonly used.\nread.table(file, header = FALSE, sep = \"\", dec = \".\", ...)\nThe main parameter are :\n\nfile : add the pathway and the name of the file\nheader : a logical value (TRUE or FALSE)indicating whether the file contains the names of the variables as its first line.\nsep : the field separator character. Values on each line of the file are separated by this character. If sep = “” (the default for read.table) the separator is ‘white space’, that is one or more spaces, tabs, newlines or carriage returns.\ndec : the character used in the file for decimal points.\n\n\nds &lt;- read.table(here::here(\"data\",\n                            \"rforbeginers\",\n                            \"exemple_read.txt\"),\n                 header = TRUE,\n                 sep = \";\",\n                 dec = \",\")\n\nWhy I use the parameter header=TRUE ?\n\n\nTo export data set as .txt to read in excel\nThe function is similar to read.table()\nwrite.table(x, file = \"\", sep = \" \",na = \"NA\", dec = \".\", ... )\n\nx : this is your data.frame\nfile : give a name for your file\nsep : cf read.table\ndec : cf read.table\nna : give a symbole for missing data, by convention is NA\n\n\nwrite.table(ds, \"ds.txt\", sep = \"\\t\", dec = \".\")\n\nTo keep our working directory tidy, we now delete ds.txt\n\nfile.remove(\"ds.txt\")\n\nWarning in file.remove(\"ds.txt\"): impossible d'effacer le fichier 'ds.txt', à\ncause de 'No such file or directory'\n\n\n[1] FALSE\n\n\nExo 4\n\nIn the dataset Iris select Sepal Width, Sepal length and Species,to create a new data frame name “subset_iris”\nSave this new data frame as text file"
  },
  {
    "objectID": "rforbeginer.html#how-to-represent-your-data",
    "href": "rforbeginer.html#how-to-represent-your-data",
    "title": "Part 0: R for beginner",
    "section": "How to represent your data",
    "text": "How to represent your data\nggplot2 is a powerfull packages to make a very smart graph “ready to use” for publication. gg means grammar and graph, a concept which describe a graph using grammar. This package belong to tidyverse according to dplyr. According to the ggplot2 concept, a graph can be divided into different basic parts:Plot = data + Aesthetics + Geometry\n\ndata : data frame\naesthetics : allows to indicate the x and y variables. It can also be used to control the color, size and shape of the points, etc…\ngeometry : corresponds to the type of graph (histogram, box plot, line plot, …..)\n\n\nlibrary(ggplot2)\n# scatter plot \nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ #  what I want to represent \n  geom_point() # how I represent it \n\n\n\n\n\n# We can calorize and give a shape by month \n# scatter plot \nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ \n  geom_point(aes(color = Species, shape = Species)) # shape is the same thing with classical plot on R\n\n\n\n\n\n# You can change manually color with la fonction scale_color_manual()\nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+  \n geom_point(aes(color = Species, shape = Species))  +\n  scale_color_manual(values = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n\n\n\n\n#Boxplot \nggplot(data = iris, aes(Species, Sepal.Length))+ #  what I want to represent \n  geom_boxplot(aes(color=Species, fill=Species), alpha=0.4)+# how I represent it. Here I changed geometry using boxplot.\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()\n\n\n\n\nSave your plot\nUsing the function pdf()\nFirstly you have to store plot inside and object\n\n#Boxplot \ng1&lt;-ggplot(data = iris, aes(Species, Sepal.Length))+ #  what I want to represent \n  geom_boxplot(aes(color=Species, fill=Species), alpha=0.4)+# how I represent it. Here I changed geometry using boxplot.\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()\n\n\npdf(\"yourfile.pdf\")\ng1\ndev.off()\n\nquartz_off_screen \n                2 \n\n\nor ggplot2::ggsave()\n\nggsave(\"yourfile2.pdf\", g1)\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "FormationR",
    "section": "",
    "text": "Welcome on the R training provided by OMICS platform and MIO"
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "FormationR",
    "section": "Schedule",
    "text": "Schedule\n\nDAY1 :\n\nRstudio environment and R language course\nPractical 1: R basics: Vectors, Tables, dataframe, manipulations, descriptive statistics, Rmarkdown\n\nDAY2\n\nEnd of Practical 1\nGraphical representation of biological data & management of parameters type/colour/shape/…\n\nDAY3\n\nPractical 2 Graphical representation of results\n\nDAY4\n\nLectures and practical work: Inferential statistics (Anova, Kruskall, Wilcoxon, regression, correlation, r, R2, adjusted p-value, etc.)\n\nDay 5\n\nGlobal test - Validation of prior learning"
  },
  {
    "objectID": "about.html#organisation-committee-and-intervenants",
    "href": "about.html#organisation-committee-and-intervenants",
    "title": "About",
    "section": "Organisation committee and intervenants",
    "text": "Organisation committee and intervenants\nLaurie Casalot\nFabrice Armougom\nMarc Garel\nPauline Le Coq"
  }
]